# -*- coding: utf-8 -*-
"""Financial_market_news.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Uf1iJn5Lq4fgT-vqy5Cuj7gEsj1Bn_CZ

**Financial Market News-Sentiment Analysis**

**Objective :**
Develop a business-oriented financial market news sentiment analysis model to gauge market sentiment from news articles and headlines, providing valuable insights for informed decision-making by investors, traders, and financial professionals.

**Datasource : **
The Financial Market News-Sentiment Analysis will draw data from reputable financial news sources, news APIs, and financial market data providers. This dataset will encompass a wide range of news articles and sentiment labels, enabling the model to learn and predict market sentiment trends accurately.

**IMPORT LIBRARY**
"""

import pandas as pd
import numpy as np

df= pd.read_csv('https://github.com/YBIFoundation/Dataset/raw/main/Financial%20Market%20News.csv', encoding= "ISO-8859-1")

df.head()

df.info()

df.describe()

df.columns

df.shape

"""**Get Feature Selection**"""

' '.join(str(x) for x in df.iloc[1,2:27])

df.index

len(df.index)

news = []
for rows in range(0, len(df.index)):
  news.append(' '.join(str(x) for x in df.iloc[1,2:27]))

type(news)

news[0]

X=news

type(X)

"""**Get Feature Text Conversion to Bag of Words**"""

from sklearn.feature_extraction.text import CountVectorizer

cv = CountVectorizer(lowercase = True , ngram_range=(1,1))

X = cv.fit_transform(X)

X.shape

y= df['Label']
y.shape

"""**Get Train Test Split**"""

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test = train_test_split(X,y , random_state=2529, test_size=0.3, stratify= y)

"""**Modeling**"""

from sklearn.ensemble import RandomForestClassifier

rf=RandomForestClassifier(n_estimators=200)

"""Model Evaluation"""

rf.fit(X_train, y_train)

"""**Prediction**"""

y_pred= rf.predict(X_test)

from sklearn.metrics import classification_report, confusion_matrix, accuracy_score
confusion_matrix(y_test,y_pred)

accuracy_score(y_test,y_pred)

print(classification_report(y_test,y_pred))

"""Explanation

The Financial Market News-Sentiment Analysis model employs machine learning techniques to process and analyze a vast array of financial news articles and headlines. By leveraging natural language processing and sentiment analysis algorithms, the model determines the sentiment (positive, negative, neutral) expressed in the news content. This insight helps investors and financial professionals gauge market sentiment, make informed decisions, and react promptly to changing market conditions based on the collective sentiment of news sources.
"""